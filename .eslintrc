{
    "root": true,
    "parserOptions": {
        "ecmaVersion": 6,
        "ecmaFeatures": {
            "jsx": true
        },
        "sourceType": "module"
    },
    "plugins": ["lodash", "react", "import", "xo", "destructuring", "switch-case", "promise"],
    "settings": {
        "react": {
            "version": "15.1"
        },
        "import/resolver": {
            "@saxo/webpack-import-resolver": {
                "config": "./js/build/webpack/config"
            }
        },
        "import/ignore": [
            "templates",
            "libs",
            "\\.json",
            "node_modules"
        ]
    },
    "globals": {
        // added by the build process
        "BUILD_IS_DEBUG": false,
        "BUILD_IS_PHONE": false,
        "BUILD_IS_TABLET": false,
        "BUILD_IS_DESKTOP": false,
        "BUILD_APP_NAME": false,
        // use for module splitting
        "require": false,
        // define our own globals since the built-in list contains many false negatives like "find" that are non-standard
        "window": false,
        "document": false,
        "location": false,
        "escape": false,
        "unescape": false,
        "setTimeout": false,
        "clearTimeout": false,
        "setInterval": false,
        "clearInterval": false,
        "console": false,
        "sessionStorage": false,
        "localStorage": false,
        "XMLHttpRequest": false,
        "atob": false,
        "Blob": false,
        "navigator": false,
        "MessageChannel": false,
        "Map": false,
        "Uint8Array": false,
        "Promise": false,
        "HTMLElement": false,
    },
    "rules": {
        // Possible errors
        "comma-dangle": ["error", "always-multiline"],
        "no-cond-assign": "error",
        "no-console": "error",
        "no-constant-condition": "error",
        "no-control-regex": "error",
        "no-debugger": "error",
        "no-dupe-args": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-empty": "error",
        "no-empty-character-class": "error",
        "no-ex-assign": "error",
        "no-extra-boolean-cast": "error",
        "no-extra-parens": ["error", "functions"],
        "no-extra-semi": "error",
        "no-func-assign": "error",
        "no-inner-declarations": ["error", "functions"],
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "error",
        "no-obj-calls": "error",
        "no-prototype-builtins": "off",
        "no-regex-spaces": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "off",
        "no-unexpected-multiline": "error",
        "no-unreachable": "error",
        "no-unsafe-negation": "error",
        "no-unsafe-finally": "error",
        "use-isnan": "error",
        "valid-jsdoc": [
            "off", {
                // too restrictive at present
                "requireReturn": false,
                "requireParamDescription": false,
                "requireReturnDescription": false
            }
        ],
        "valid-typeof": "error",
        // Best practices
        "accessor-pairs": "off",
        "array-callback-return": "error",
        "block-scoped-var": "error",
        "class-methods-use-this": "off",
        "complexity": ["error", 17],
        "consistent-return": "off",
        "curly": ["error", "all"],
        "default-case": "off",
        "dot-location": ["error", "property"],
        "dot-notation": "off",
        "eqeqeq": ["error", "allow-null"],
        "guard-for-in": "error",
        "no-alert": "error",
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-div-regex": "error",
        "no-else-return": "error",
        "no-empty-function": "off",
        // Related - lodash/use-noop
        "no-empty-pattern": "error",
        "no-eq-null": "off",
        // see also eqeqeq
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-label": "error",
        "no-fallthrough": "error",
        "no-floating-decimal": "error",
        "no-global-assign": "error",
        "no-implicit-coercion": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        "no-invalid-this": "off",
        // Does not work with spine this.proxy and arrows used in new code
        "no-iterator": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-loop-func": "error",
        "no-magic-numbers": [
            "off",
            {
                "ignore": [-1, 0, 1, 2]
            }
        ],
        // nice idea but many self explanatory numbers caught
        "no-multi-spaces": "error",
        "no-multi-str": "error",
        "no-new": "off",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-octal": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "off",
        "no-proto": "error",
        "no-redeclare": "error",
        "no-return-assign": "error",
        "no-return-await": "error",
        "no-script-url": "error",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-throw-literal": "error",
        "no-unmodified-loop-condition": "error",
        "no-unused-expressions": "error",
        "no-unused-labels": "error",
        "no-useless-call": "error",
        "no-useless-concat": "error",
        "no-useless-escape": "error",
        "no-useless-return": "error",
        "no-void": "error",
        "no-warning-comments": "off",
        "no-with": "error",
        "radix": ["error", "always"],
        "require-await": "off",
        // fixed in es5 but we support android 4.1-4.3 which require a radix
        "vars-on-top": "off",
        "wrap-iife": ["error", "any"],
        "yoda": ["error", "never"],
        // Strict mode
        "strict": "error",
        // Variables
        "init-declarations": "off",
        "no-catch-shadow": "error",
        "no-delete-var": "off",
        "no-label-var": "error",
        "no-restricted-globals": "off",
        "no-shadow": "error",
        "no-shadow-restricted-names": "error",
        "no-undef": "error",
        "no-undef-init": "off",
        "no-undefined": "off",
        "no-unused-vars": [
            "error",
            {
                "vars": "all",
                "args": "none"
            }
        ],
        "no-use-before-define": ["error", "nofunc"],
        // Node.js and CommonJS
        "callback-return": "off",
        "global-require": "off",
        "handle-callback-err": "off",
        "no-mixed-requires": "off",
        "no-new-require": "off",
        "no-path-concat": "off",
        "no-process-env": "off",
        "no-process-exit": "off",
        "no-restricted-modules": "off",
        "no-restricted-properties": "off",
        "no-sync": "off",

        // Stylistic issues
        "array-bracket-spacing": ["error", "never"],
        "block-spacing": ["error", "always"],
        "brace-style": [
            "error",
            "1tbs",
            {
                "allowSingleLine": false
            }
        ],
        "camelcase": [
            "error",
            {
                "properties": "always"
            }
        ],
        "capitalized-comments": ["off", "never"], // will enable when autofixed
        "comma-spacing": [
            "error",
            {
                "before": false,
                "after": true
            }
        ],
        "comma-style": ["error", "last"],
        "computed-property-spacing": ["error", "never"],
        "consistent-this": "off",
        "eol-last": "error",
        "func-call-spacing": ["error", "never"],
        "func-name-matching": "error",
        "func-names": "off",
        "func-style": [
            "error",
            "declaration",
            {
                "allowArrowFunctions": true
            }
        ],
        "id-blacklist": "off",
        "id-length": ["off"],
        // Difficult to enforce
        "id-match": "off",
        "indent": [
            "error",
            4,
            {
                "SwitchCase": 1
            }
        ],
        // TODO: Consider MemberExpression
        "jsx-quotes": ["error", "prefer-double"],
        "key-spacing": [
            "error",
            {
                "beforeColon": false,
                "afterColon": true
            }
        ],
        "keyword-spacing": "error",
        "line-comment-position": "off",
        "linebreak-style": ["error", "windows"],
        "lines-around-comment": "off",
        "lines-around-directive": "off",
        "max-depth": ["error", 4],
        "max-len": [
            "error",
            {
                "code": 150
            }
        ],
        "max-lines": [
            "error",
            {
                "skipBlankLines": true,
                "skipComments": true,
                "max": 300
            }
        ],
        "max-nested-callbacks": ["error", 3],
        "max-params": ["error", 5],
        "max-statements": ["error", 30],
        "max-statements-per-line": [
            "error",
            {
                "max": 2
            }
        ],
        "multiline-ternary": "off",
        "new-cap": [
            "error",
            {
                "newIsCap": true,
                "capIsNew": false
            }
        ],
        // React mixins are capitalized
        "new-parens": "error",
        "newline-after-var": "off",
        "newline-before-return": "off",
        "newline-per-chained-call": "off",
        "no-array-constructor": "error",
        "no-bitwise": "off",
        "no-continue": "off",
        "no-inline-comments": "off",
        "no-lonely-if": "error",
        "no-mixed-spaces-and-tabs": "error",
        "no-multiple-empty-lines": [
            "error",
            {
                "max": 1,
                "maxBOF": 0,
                "maxEOF": 1
            }
        ],
        "no-negated-condition": "error",
        "no-nested-ternary": "error",
        "no-new-object": "error",
        "no-plusplus": "off",
        "no-restricted-syntax": "off",
        "no-tabs": "error",
        "no-ternary": "off",
        "no-trailing-spaces": "error",
        "no-underscore-dangle": [
            "off",
            {
                "allow": ["_"]
            }
        ],
        // required in a few cases
        "no-unneeded-ternary": [
            "error",
            {
                "defaultAssignment": false
            }
        ],
        "no-whitespace-before-property": "error",
        "object-property-newline": [
            "error", {
                "allowMultiplePropertiesPerLine": true
            }
        ],
        "object-curly-newline": [
            "off", {
                // waiting on https://github.com/eslint/eslint/issues/6488
                "ObjectExpression": {
                    "multiline": true,
                    "minProperties": 3
                }
            }
        ],
        "object-curly-spacing": ["error", "always"],
        "one-var": [
            "error",
            {
                "let": "never",
                "const": "never"
            }
        ],
        "one-var-declaration-per-line": "off",
        "operator-assignment": ["error", "always"],
        "operator-linebreak": ["error", "after"],
        "padded-blocks": "off",
        "quote-props": "off",
        "quotes": ["error", "single"],
        "require-jsdoc": "off",
        "semi": ["error", "always"],
        "semi-spacing": [
            "error",
            {
                "before": false,
                "after": true
            }
        ],
        "sort-keys": "off",
        "sort-vars": "off",
        "space-before-blocks": ["error", "always"],
        "space-before-function-paren": ["error", "never"],
        "space-in-parens": ["error", "never"],
        "space-infix-ops": "error",
        "space-unary-ops": [
            "error",
            {
                "words": true,
                "nonwords": false
            }
        ],
        "spaced-comment": ["error", "always", { "exceptions": ["*"] }],
        "unicode-bom": "off",
        "wrap-regex": "off",
        // ES2015 rules
        "arrow-body-style": [
            "error",
            "as-needed",
            {
                "requireReturnForObjectLiteral": true
            }
        ],
        "arrow-parens": ["error", "always"],
        "arrow-spacing": [
            "error",
            {
                "before": true,
                "after": true
            }
        ],
        "constructor-super": "error",
        "generator-star-spacing": "off",
        "no-class-assign": "error",
        "no-confusing-arrow": "off",
        "no-const-assign": "error",
        "no-dupe-class-members": "error",
        "no-duplicate-imports": "error",
        "no-new-symbol": "error",
        "no-restricted-imports": "error",
        "no-this-before-super": "error",
        "no-useless-computed-key": "error",
        "no-useless-constructor": "error",
        "no-useless-rename": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "prefer-arrow-callback": "off",
        "prefer-const": [
            "error",
            {
                "ignoreReadBeforeAssign": true
            }
        ],
        "prefer-numeric-literals": "off",
        "prefer-reflect": "off",
        "prefer-rest-params": "off",
        "prefer-spread": "off",
        "prefer-template": "off",
        "sort-imports": "off",
        "symbol-description": "off",
        "require-yield": "off",
        "template-curly-spacing": "off",
        "yield-star-spacing": "off",
        // Lodash rules - possible errors
        "lodash/callback-binding": "error",
        "lodash/unwrap": "error",
        "lodash/no-double-unwrap": "error",
        "lodash/collection-return": "error",
        "lodash/no-extra-args": "error",
        "lodash/no-unbound-this": "error",
        "lodash/collection-method-value": "error",
        // Lodash rules - stylistic
        "lodash/chain-style": ["error", "explicit"],
        "lodash/chaining": ["error", "always", 3],
        "lodash/consistent-compose": "off",
        "lodash/identity-shorthand": ["error", "always"],
        "lodash/matches-prop-shorthand": [
            "error",
            "always",
            {
                "onlyLiterals": true
            }
        ],
        "lodash/matches-shorthand": [
            "error",
            "always",
            3,
            true,
            {
                "onlyLiterals": true
            }
        ],
        "lodash/no-commit": "error",
        "lodash/path-style": ["off", "as-needed"],
        // Good to change in the future
        "lodash/preferred-alias": "error",
        "lodash/prefer-compact": "error",
        "lodash/prefer-filter": "off",
        "lodash/prefer-flat-map": "error",
        "lodash/prefer-includes": [
            "error",
            {
                "includeNative": false
            }
        ],
        "lodash/prefer-invoke-map": "error",
        "lodash/prefer-map": "error",
        "lodash/prefer-reject": ["error", 3],
        "lodash/prefer-thru": "error",
        "lodash/prefer-wrapper-method": "error",
        "lodash/prop-shorthand": ["error", "always"],
        // Lodash - preference over native
        "lodash/prefer-constant": "off",
        "lodash/prefer-get": "off",
        "lodash/prefer-is-nil": "off",
        "lodash/prefer-lodash-chain": "error",
        "lodash/prefer-lodash-method": [
            "error",
            {
                "ignoreMethods": [
                    "find", // spine & jquery

                    // Many occurrences, lodash not a clear decision
                    "slice",

                    // TODO - convert Util.endsWith
                    "endsWith"
                ],
                "ignoreObjects": [
                    // Allow use of React.Children methods
                    "React.Children"
                ]
            }
        ],
        "lodash/prefer-lodash-typecheck": "off",
        "lodash/prefer-matches": "off",
        "lodash/prefer-noop": "error",
        "lodash/prefer-over-quantifier": "error",
        "lodash/prefer-startswith": "error",
        "lodash/prefer-times": "error",
        // React
        "react/display-name": "off",
        "react/forbid-prop-types": "off",
        "react/no-array-index-key": "off",
        "react/forbid-component-props": "off",
        "react/no-children-prop": "error",
        "react/no-danger": "off",
        "react/no-danger-with-children": "error",
        "react/no-deprecated": "error",
        "react/no-did-mount-set-state": "error",
        "react/no-did-update-set-state": "error",
        "react/no-direct-mutation-state": "off",
        "react/no-find-dom-node": "off",
        // TODO should error
        "react/no-is-mounted": "error",
        "react/no-multi-comp": [
            "error",
            {
                "ignoreStateless": true
            }
        ],
        "react/no-render-return-value": "error",
        "react/no-set-state": "off",
        "react/no-string-refs": "error",
        "react/no-unescaped-entities": "error",
        "react/no-unknown-property": "error",
        "react/no-unused-prop-types": "off",
        // TODO - consider switching on
        "react/prefer-es6-class": ["error", "always"],
        "react/prefer-stateless-function": "error",
        "react/prop-types": [
            "error",
            {
                "ignore": ["children", "dispatch"]
            }
        ],
        "react/react-in-jsx-scope": "error",
        "react/require-default-props": "off",
        "react/require-optimization": "off",
        "react/require-render-return": "error",
        "react/self-closing-comp": [
            "error",
            {
                "component": true,
                "html": false
            }
        ],
        // TODO: Switch on html
        "react/sort-comp": "error",
        "react/sort-prop-types": "off",
        "react/style-prop-object": "error",
        // React JSX
        "react/jsx-boolean-value": "error",
        "react/jsx-closing-bracket-location": "error",
        "react/jsx-curly-spacing": ["error", "never"],
        "react/jsx-equals-spacing": ["error", "never"],
        "react/jsx-filename-extension": [
            "error",
            {
                "extensions": [".jsx"]
            }
        ],
        "react/jsx-handler-names": "error",
        "react/jsx-indent-props": ["error", 4],
        "react/jsx-indent": ["error", 4],
        "react/jsx-key": "error",
        "react/jsx-no-bind": "error",
        "react/jsx-no-comment-textnodes": "error",
        "react/jsx-no-duplicate-props": "error",
        "react/jsx-no-literals": "off",
        "react/jsx-no-target-blank": "error",
        "react/jsx-no-undef": "error",
        "react/jsx-pascal-case": "error",
        "react/jsx-sort-props": "off",
        "react/jsx-sort-prop-types": "off",
        "react/jsx-space-before-closing": ["error", "never"],
        "react/jsx-tag-spacing": ["error",
            {
                "closingSlash": "never",
                "beforeSelfClosing": "never",
                "afterOpening": "never"
            }
        ],
        "react/jsx-max-props-per-line": "off",
        "react/jsx-uses-react": "error",
        "react/jsx-uses-vars": "error",
        "react/jsx-wrap-multilines": "error",
        // import - static analysis
        "import/no-unresolved": "error",
        "import/named": "error",
        "import/default": "error",
        "import/namespace": "error",
        "import/no-dynamic-require": "off",
        "import/no-internal-modules": "off",
        "import/no-restricted-paths": [
            "error", {
                "zones": [
                    {
                        "target": "js/src/framework",
                        "from": "js/src/controllers"
                    },
                    {
                        "target": "js/src/framework",
                        "from": "js/src/viewControllers"
                    }
                ]
            }
        ],
        "import/no-absolute-path": "error",
        "import/no-webpack-loader-syntax": "off",

        // import - warnings
        "import/export": "error",
        "import/no-named-as-default": "error",
        "import/no-named-as-default-member": "error",
        "import/no-deprecated": "error",
        "import/no-extraneous-dependencies": "error",
        "import/no-mutable-exports": "error",
        // import - module systems
        "import/unambiguous": "off",
        "import/no-commonjs": "error",
        "import/no-amd": "error",
        "import/no-nodejs-modules": "error",
        // import - stylistic
        "import/no-duplicates": "error",
        "import/no-namespace": "off",
        "import/extensions": [
            "error",
            {
                "js": "never",
                "jsx": "never",
                "json": "always"
            }
        ],
        "import/first": "error",
        "import/order": "off",
        "import/newline-after-import": ["error", "always"],
        "import/prefer-default-export": "off",
        "import/no-unassigned-import": "off",
        "import/no-named-default": "error",
        // XO
        "xo/catch-error-name": "off",
        "xo/filename-case": [
            "error",
            {
                "case": "camelCase"
            }
        ],
        "xo/no-process-exit": "off",
        "xo/throw-new-error": "off",
        // duplicate with eslint core
        "xo/no-abusive-eslint-disable": "error",
        // Destructuring
        "destructuring/no-rename": "error",
        "destructuring/in-params": [
            "error",
            {
                "max-params": 1
            }
        ],
        // Switch-Case
        "switch-case/no-case-curly": "error",
        "switch-case/newline-between-switch-case": [
            "error",
            "always",
            {
                "fallthrough": "never"
            }
        ],
        "promise/catch-or-return": "off",
        "promise/param-names": "error",
        "promise/no-native": "off",
        "promise/no-return-wrap": "off",
        "promise/always-return": "off",
        "promise/no-nesting": "off",
        "promise/no-promise-in-callback": "error",
        "promise/no-callback-in-promise": "off",
        "promise/prefer-await-to-then": "off",
        "promise/prefer-await-to-callbacks": "off"
    }
}
